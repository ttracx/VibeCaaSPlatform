version: "3.9"

name: vibecaas

networks:
  vibecaas-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  grafana_data:

services:
  postgres:
    image: postgres:15
    container_name: vibecaas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-vibecaas}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vibecaas-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: vibecaas-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vibecaas-network
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
    container_name: vibecaas-backend
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://postgres:postgres@postgres:5432/vibecaas}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      API_PORT: ${API_PORT:-8000}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000}
      JWT_SECRET: ${JWT_SECRET:-devsecretdevsecretdevsecretdev}
      ENABLE_GPU_SUPPORT: ${ENABLE_GPU_SUPPORT:-false}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - vibecaas-network
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port ${API_PORT:-8000} --reload"

  frontend:
    build:
      context: ./frontend
    container_name: vibecaas-frontend
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:8000}
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:3000"
    networks:
      - vibecaas-network
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev"

  nginx:
    image: nginx:1.27-alpine
    container_name: vibecaas-nginx
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vibecaas-network
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: vibecaas-prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vibecaas-network

  grafana:
    image: grafana/grafana:11.1.0
    container_name: vibecaas-grafana
    restart: unless-stopped
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/vibecaas-dashboard.json:ro
    ports:
      - "3001:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vibecaas-network

  adminer:
    image: adminer:4.8.1
    container_name: vibecaas-adminer
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vibecaas-network

version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vibecaas
      POSTGRES_USER: vibecaas_user
      POSTGRES_PASSWORD: vibecaas_dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vibecaas_user -d vibecaas"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGINS: ${CORS_ORIGINS}
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data:

