# VibeCaaS Local Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vibecaas-postgres
    environment:
      POSTGRES_DB: vibecaas
      POSTGRES_USER: vibecaas_user
      POSTGRES_PASSWORD: vibecaas_dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - vibecaas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vibecaas_user -d vibecaas"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vibecaas-redis
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks:
      - vibecaas-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vibecaas-backend
    environment:
      DATABASE_URL: postgresql://vibecaas_user:vibecaas_dev_password@postgres:5432/vibecaas
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      DOCKER_HOST: unix:///var/run/docker.sock
      API_PORT: 8000
      CORS_ORIGINS: "http://localhost:3000,http://localhost:3001"
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - app_data:/app/data
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - vibecaas-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vibecaas-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - vibecaas-network
    command: npm run dev

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: vibecaas-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - vibecaas-network

  # Docker Registry for Local Development
  registry:
    image: registry:2
    container_name: vibecaas-registry
    ports:
      - "5000:5000"
    volumes:
      - registry_data:/var/lib/registry
    networks:
      - vibecaas-network

  # Prometheus for Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: vibecaas-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - vibecaas-network

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: vibecaas-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - vibecaas-network

  # Adminer for Database Management
  adminer:
    image: adminer:latest
    container_name: vibecaas-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - vibecaas-network

networks:
  vibecaas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  postgres_data:
  redis_data:
  app_data:
  registry_data:
  prometheus_data:
  grafana_data: